import transferSchemas/ruthSolar
import solarSystem
import ruthAtom

construction rule1:ruthAtomG = r1:f1:obj <- prefixUnRel[msnr111:mass, CPsr1112:electron]

#construction rule2:ruthAtomG =  r2:f2:formula <- infixBinRel[tlogr2112:obj <- prefixUnRel[msnr2112:mass, CPsr21113:electron], eqsr211:more, CPsr2122:zero]

#construction rule3:ruthAtomG =  r3:f3:formula <- logicApplyQuant[qr311:forall, sr311:t1:time, teqr3112:formula <- infixBinRel[textr31113:formula <- prefixTerRel[colr31113:coloumb, sr311113:electron, sr311123:n1nucleus, sr311133:t1:time], eqsr3112:more, CPsr31123:zero]]

construction ruleAll:ruthAtomG =  ruleAll:rr:formula <- logicInfixOp[teqr111:formula <- infixBinRel[tlogr1112:obj <- prefixUnRel[msnr1112:mass, CPsr11113:nucleus], eqsr111:more, tlogr1122:obj <- prefixUnRel[msnr1122:mass, CPsr11213:electron]], A1:and, rule2andrest:formula <- logicInfixOp[teqr211:formula <- infixBinRel[tlogr2112:obj <- prefixUnRel[msnr2112:mass, CPsr21113:electron], eqsr211:more, CPsr2122:zero], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, sr311:t1:time, teqr3112:formula <- infixBinRel[textr31113:formula <- prefixTerRel[colr31113:coloumb, sr311113:electron, sr311123:n1:nucleus, sr311133:t1:time], eqsr3112:more, CPsr31123:zero]], A3:and, tqntr411:formula <- logicApplyQuant[qr411:forall, sr411:t1:time, teqr4112:formula <- infixBinRel[textr41113:formula <- prefixTerRel[disr41113:distance, sr411113:electron, sr411123:nucleus, sr411133::time], eqsr4112:more, CPsr41123:zero]]]]]


#transfer
#    sourceConstruction rule1
#    targetConSpec ruthAtomG
#    interConSpec interRuthSol
#    goal :metaTrue <- close[r1:f1:obj, t':formula]
#    output ruth1
#    limit 150
#    matchTarget ttarget:formula <- prefixUnRel[msnr111:mass, CPsr1112:electron]


#transfer
#    sourceConstruction rule3
#    targetConSpec ruthAtomG
#    interConSpec interRuthSol
#    goal :metaTrue <- close[r3:f3:formula, t':formula]
#    output ruth3
#    limit 150
#    matchTarget ttarget:formula <- logicApplyQuant[qr311:forall, sr311:t1:time, teqr3112:formula <- infixBinRel[textr31113:formula <- prefixTerRel[colr31113:coloumb, sr311113:electron, sr311123:n1nucleus, sr311133:t1:time], eqsr3112:more, CPsr31123:zero]]

#transfer
#    sourceConstruction rule2
#    targetConSpec ruthAtomG
#    interConSpec interRuthSol
#    goal :metaTrue <- close[r2:f2:formula, t':formula]
#    output ruth2
#    limit 150
#    matchTarget ttarget:formula <- infixBinRel[tchpr2112:formula <- prefixUnRel[mser2112:mass, CPsr21123:planet], eqsr211:more, CPsr2122:zero]

transfer
    sourceConstruction ruleAll
    targetConSpec solarSystemG
    interConSpec interRuthSol
    goal :metaTrue <- close[ruleAll:rr:formula, t':formula]
    output ruthSolAnalogy
    limit 150
    matchTarget ttarget:formula <- logicInfixOp[teqr111:formula <- infixBinRel[tchpr1112:obj <- prefixUnRel[mser1112:mass, CPsr11123:sun], eqsr111:more, tchpr1122:obj <- prefixUnRel[mser1122:mass, CPsr11223:planet]], A1:and, rule2andrest:formula <- logicInfixOp[teqr211:formula <- infixBinRel[tchpr2112:obj <- prefixUnRel[mser2112:mass, CPsr21123:planet], eqsr211:more, CPsr2122:zero], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, sr311:t1:time, teqr3112:formula <- infixBinRel[textr31113:formula <- prefixTerRel[grvr31113:gravity, sr311113:planet, sr311123:sun, sr311133:t1:time], eqsr3112:more, CPsr31123:zero]], A3:and, tqntr411:formula <- logicApplyQuant[qr411:forall, sr411:t1:time, teqr4112:formula <- infixBinRel[textr41113:formula <- prefixTerRel[disr41113:distance, sr411113:planet, sr411123:sun, sr411133:t1:time], eqsr4112:more, CPsr41123:zero]]]]]
