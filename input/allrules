import transferSchemas/measPath

construction rule1:measStickG = 
	tqntr111:r1:formula <- logicApplyQuant[qr111:forall, sr111:s1:seg, tqntr1112:formula <- logicApplyQuant[qr1112:forall, sr1112:s2:seg, teqvr11113:formula <- logicInfixOp[tlogr111114:formula <- prefixBinRel[lgr111114:longer, sr1111114:s1:seg, sr1111124:s2:seg], eqvr11113:equiv, tshrr111124:formula <- prefixBinRel[shr111124:shorter, sr1111214:Ls:seg, sr1111224:1s:seg]]]]

construction rule2:measStickG = 
	tqntr211:r2:formula <- logicApplyQuant[qr211:forall, sr211:s1:seg, tqntr2112:formula <- logicApplyQuant[qr2112:forall, sr2112:s2:seg, tqntr21113:formula <- logicApplyQuant[qr21113:forall, sr21113:s3:seg, teqvr211114:formula <- logicInfixOp[textr2111115:seg <- prefixTerOp[exdr2111115:extend, sr21111115:s1:seg, sr21111125:s2:seg, sr21111135:s3:seg], eqvr211114:equiv, textr2111125:seg <- prefixTerOp[exdr2111125:extend, sr21111215:s1:seg, sr21111225:s2:seg, sr21111235:s3:seg]]]]]

construction rule3:measStickG = 
	tqntr311:r3:formula <- logicApplyQuant[qr311:forall, sr311:s1:seg, tqntr3112:formula <- logicApplyQuant[qr3112:forall, sr3112:s2:seg, timpr31113:formula <- logicInfixOp[tnotr311114:formula <- logicApplyUnary[ntr311114:not, tshrr3111115:formula <- prefixBinRel[shr3111115:shorter, sr31111115:s1:seg, sr31111125:s2:seg]], impr31113:implies, timpr311124:formula <- logicInfixOp[tnotr3111215:formula <- logicApplyUnary[ntr3111215:not, tnotr31112116:formula <- logicApplyUnary[ntr31112116:not, tshrr311121117:formula <- prefixBinRel[shr311121117:shorter, sr3111211117:s1:seg, sr3111211127:s2:seg]]], impr311124:implies, teqr3111225:formula <- logicInfixOp[tnotr31112216:formula <- logicApplyUnary[ntr31112216:not, tnotr311122117:formula <- logicApplyUnary[ntr311122117:not, tshrr3111221118:formula <- prefixBinRel[shr3111221118:shorter, sr31112211118:s1:seg, sr31112211128:s2:seg]]], eqsr3111225:equals, tnotr31112226:formula <- logicApplyUnary[ntr31112226:not, tnotr311122217:formula <- logicApplyUnary[ntr311122217:not, tshrr3111222118:formula <- prefixBinRel[shr3111222118:shorter, sr31112221118:s1:seg, sr31112221128:s2:seg]]]]]]]]

construction rule4:measStickG = 
	tqntr411:r4:formula <- logicApplyQuant[qr411:forall, sr411:s1:seg, tnotr4112:formula <- logicApplyUnary[ntr4112:not, tlogr41113:formula <- prefixBinRel[lgr41113:longer, usr411113:u1:unitSeg, sr411123:s1:seg]]]

construction rule5:measStickG = 
	tqntr511:r5:formula <- logicApplyQuant[qr511:forall, sr511:s1:seg, tqntr5112:formula <- logicApplyQuant[qr5112:forall, sr5112:s2:seg, timpr51113:formula <- logicInfixOp[tshrr511114:formula <- prefixBinRel[shr511114:shorter, sr5111114:s1:seg, sr5111124:s2:seg], impr51113:implies, tnotr511124:formula <- logicApplyUnary[ntr511124:not, tshrr5111215:formula <- prefixBinRel[shr5111215:shorter, sr51112115:s1:seg, sr51112125:s2:seg]]]]]

construction rule6:measStickG = 
	tqntr611:r6:formula <- logicApplyQuant[qr611:forall, sr611:s1:seg, tqntr6112:formula <- logicApplyQuant[qr6112:forall, sr6112:s2:seg, tqntr61113:formula <- logicApplyQuant[qr61113:forall, sr61113:s3:seg, timpr611114:formula <- logicInfixOp[textr6111115:seg <- prefixTerOp[exdr6111115:extend, sr61111115:s1:seg, sr61111125:s2:seg, sr61111135:s3:seg], impr611114:implies, tandr6111125:formula <- logicInfixOp[tlogr61111216:formula <- prefixBinRel[lgr61111216:longer, sr611112116:Es:seg, sr611112126:1s:seg], andr6111125:and, tlogr61111226:formula <- prefixBinRel[lgr61111226:longer, sr611112216:Es:seg, sr611112226:1s:seg]]]]]]

construction rule1to5:measStickG = 
	rule1andrest:r15:formula <- logicInfixOp[tqntr111:formula <- logicApplyQuant[qr111:forall, sr111:s1:seg, tqntr1112:formula <- logicApplyQuant[qr1112:forall, sr1112:s2:seg, teqvr11113:formula <- logicInfixOp[tlogr111114:formula <- prefixBinRel[lgr111114:longer, sr1111114:s1:seg, sr1111124:s2:seg], eqvr11113:equiv, tshrr111124:formula <- prefixBinRel[shr111124:shorter, sr1111214:Ls:seg, sr1111224:1s:seg]]]], A1:and, rule2andrest:formula <- logicInfixOp[tqntr211:formula <- logicApplyQuant[qr211:forall, sr211:s1:seg, tqntr2112:formula <- logicApplyQuant[qr2112:forall, sr2112:s2:seg, tqntr21113:formula <- logicApplyQuant[qr21113:forall, sr21113:s3:seg, teqvr211114:formula <- logicInfixOp[textr2111115:seg <- prefixTerOp[exdr2111115:extend, sr21111115:s1:seg, sr21111125:s2:seg, sr21111135:s3:seg], eqvr211114:equiv, textr2111125:seg <- prefixTerOp[exdr2111125:extend, sr21111215:s1:seg, sr21111225:s2:seg, sr21111235:s3:seg]]]]], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, sr311:s1:seg, tqntr3112:formula <- logicApplyQuant[qr3112:forall, sr3112:s2:seg, timpr31113:formula <- logicInfixOp[tnotr311114:formula <- logicApplyUnary[ntr311114:not, tshrr3111115:formula <- prefixBinRel[shr3111115:shorter, sr31111115:s1:seg, sr31111125:s2:seg]], impr31113:implies, timpr311124:formula <- logicInfixOp[tnotr3111215:formula <- logicApplyUnary[ntr3111215:not, tnotr31112116:formula <- logicApplyUnary[ntr31112116:not, tshrr311121117:formula <- prefixBinRel[shr311121117:shorter, sr3111211117:s1:seg, sr3111211127:s2:seg]]], impr311124:implies, teqr3111225:formula <- logicInfixOp[tnotr31112216:formula <- logicApplyUnary[ntr31112216:not, tnotr311122117:formula <- logicApplyUnary[ntr311122117:not, tshrr3111221118:formula <- prefixBinRel[shr3111221118:shorter, sr31112211118:s1:seg, sr31112211128:s2:seg]]], eqsr3111225:equals, tnotr31112226:formula <- logicApplyUnary[ntr31112226:not, tnotr311122217:formula <- logicApplyUnary[ntr311122217:not, tshrr3111222118:formula <- prefixBinRel[shr3111222118:shorter, sr31112221118:s1:seg, sr31112221128:s2:seg]]]]]]]], A3:and, rule4andrest:formula <- logicInfixOp[tqntr411:formula <- logicApplyQuant[qr411:forall, sr411:s1:seg, tnotr4112:formula <- logicApplyUnary[ntr4112:not, tlogr41113:formula <- prefixBinRel[lgr41113:longer, usr411113:u1:unitSeg, sr411123:s1:seg]]], A4:and, tqntr511:formula <- logicApplyQuant[qr511:forall, sr511:s1:seg, tqntr5112:formula <- logicApplyQuant[qr5112:forall, sr5112:s2:seg, timpr51113:formula <- logicInfixOp[tshrr511114:formula <- prefixBinRel[shr511114:shorter, sr5111114:s1:seg, sr5111124:s2:seg], impr51113:implies, tnotr511124:formula <- logicApplyUnary[ntr511124:not, tshrr5111215:formula <- prefixBinRel[shr5111215:shorter, sr51112115:s1:seg, sr51112125:s2:seg]]]]]]]]]

construction rule1to6:measStickG =
	rule1andrest:r123456:formula <- logicInfixOp[tqntr111:formula <- logicApplyQuant[qr111:forall, sr111:s1:seg, tqntr1112:formula <- logicApplyQuant[qr1112:forall, sr1112:s2:seg, teqvr11113:formula <- logicInfixOp[tlogr111114:formula <- prefixBinRel[lgr111114:longer, sr1111114:s1:seg, sr1111124:s2:seg], eqvr11113:equiv, tshrr111124:formula <- prefixBinRel[shr111124:shorter, sr1111214:Ls:seg, sr1111224:1s:seg]]]], A1:and, rule2andrest:formula <- logicInfixOp[tqntr211:formula <- logicApplyQuant[qr211:forall, sr211:s1:seg, tqntr2112:formula <- logicApplyQuant[qr2112:forall, sr2112:s2:seg, tqntr21113:formula <- logicApplyQuant[qr21113:forall, sr21113:s3:seg, teqvr211114:formula <- logicInfixOp[textr2111115:seg <- prefixTerOp[exdr2111115:extend, sr21111115:s1:seg, sr21111125:s2:seg, sr21111135:s3:seg], eqvr211114:equiv, textr2111125:seg <- prefixTerOp[exdr2111125:extend, sr21111215:s1:seg, sr21111225:s2:seg, sr21111235:s3:seg]]]]], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, sr311:s1:seg, tqntr3112:formula <- logicApplyQuant[qr3112:forall, sr3112:s2:seg, timpr31113:formula <- logicInfixOp[tnotr311114:formula <- logicApplyUnary[ntr311114:not, tshrr3111115:formula <- prefixBinRel[shr3111115:shorter, sr31111115:s1:seg, sr31111125:s2:seg]], impr31113:implies, timpr311124:formula <- logicInfixOp[tnotr3111215:formula <- logicApplyUnary[ntr3111215:not, tnotr31112116:formula <- logicApplyUnary[ntr31112116:not, tshrr311121117:formula <- prefixBinRel[shr311121117:shorter, sr3111211117:s1:seg, sr3111211127:s2:seg]]], impr311124:implies, teqr3111225:formula <- logicInfixOp[tnotr31112216:formula <- logicApplyUnary[ntr31112216:not, tnotr311122117:formula <- logicApplyUnary[ntr311122117:not, tshrr3111221118:formula <- prefixBinRel[shr3111221118:shorter, sr31112211118:s1:seg, sr31112211128:s2:seg]]], eqsr3111225:equals, tnotr31112226:formula <- logicApplyUnary[ntr31112226:not, tnotr311122217:formula <- logicApplyUnary[ntr311122217:not, tshrr3111222118:formula <- prefixBinRel[shr3111222118:shorter, sr31112221118:s1:seg, sr31112221128:s2:seg]]]]]]]], A3:and, rule4andrest:formula <- logicInfixOp[tqntr411:formula <- logicApplyQuant[qr411:forall, sr411:s1:seg, tnotr4112:formula <- logicApplyUnary[ntr4112:not, tlogr41113:formula <- prefixBinRel[lgr41113:longer, usr411113:u1:unitSeg, sr411123:s1:seg]]], A4:and, rule5andrest:formula <- logicInfixOp[tqntr511:formula <- logicApplyQuant[qr511:forall, sr511:s1:seg, tqntr5112:formula <- logicApplyQuant[qr5112:forall, sr5112:s2:seg, timpr51113:formula <- logicInfixOp[tshrr511114:formula <- prefixBinRel[shr511114:shorter, sr5111114:s1:seg, sr5111124:s2:seg], impr51113:implies, tnotr511124:formula <- logicApplyUnary[ntr511124:not, tshrr5111215:formula <- prefixBinRel[shr5111215:shorter, sr51112115:s1:seg, sr51112125:s2:seg]]]]], A5:and, tqntr611:formula <- logicApplyQuant[qr611:forall, sr611:s1:seg, tqntr6112:formula <- logicApplyQuant[qr6112:forall, sr6112:s2:seg, tqntr61113:formula <- logicApplyQuant[qr61113:forall, sr61113:s3:seg, timpr611114:formula <- logicInfixOp[textr6111115:seg <- prefixTerOp[exdr6111115:extend, sr61111115:s1:seg, sr61111125:s2:seg, sr61111135:s3:seg], impr611114:implies, tandr6111125:formula <- logicInfixOp[tlogr61111216:formula <- prefixBinRel[lgr61111216:longer, sr611112116:Es:seg, sr611112126:1s:seg], andr6111125:and, tlogr61111226:formula <- prefixBinRel[lgr61111226:longer, sr611112216:Es:seg, sr611112226:1s:seg]]]]]]]]]]]

transfer
    sourceConstruction rule1
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[tqntr111:rule1:formula, t':formula]
    output rule1
    limit 1

transfer
    sourceConstruction rule2
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[t:rule2:formula, t':formula]
    output rule2
    limit 1

transfer
    sourceConstruction rule3
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[t:rule3:formula, t':formula]
    output rule3
    limit 1

transfer
    sourceConstruction rule4
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[t:rule4:formula, t':formula]
    output rule4
    limit 1

transfer
    sourceConstruction rule5
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[t:rule5:formula, t':formula]
    output rule5
    limit 1

transfer
    sourceConstruction rule6
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[t:rule6:formula, t':formula]
    output rule6
    limit 1

transfer
    sourceConstruction rule1to6
    targetConSpec measStickG
    interConSpec interMeasPath
    goal :metaBool <- close[rule1andrest:rule123456:formula, t':formula]
    output rule1to6
    limit 1

