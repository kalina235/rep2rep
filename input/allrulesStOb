import transferSchemas/measObj
import measStick

construction ruleAll:measStickG =ruleAll:rr:formula <- logicInfixOp[tqntr111:formula <- logicApplyQuant[qr111:forall, sr111:s1:seg, tqntr1112:formula <- logicApplyQuant[qr1112:forall, sr1112:s2:seg, teqvr11113:formula <- logicInfixOp[tlogr111114:formula <- prefixBinRel[lgr111114:longer, sr1111114:s1:seg, sr1111124:s2:seg], eqvr11113:equiv, tshrr111124:formula <- prefixBinRel[shr111124:shorter, sr1111214:s2:seg, sr1111224:s1:seg]]]], A1:and, rule2andrest:formula <- logicInfixOp[tqntr211:formula <- logicApplyQuant[qr211:forall, sr211:s1:seg, tqntr2112:formula <- logicApplyQuant[qr2112:forall, sr2112:s2:seg, tqntr21113:formula <- logicApplyQuant[qr21113:forall, sr21113:s3:seg, teqvr211114:formula <- logicInfixOp[textr2111115:formula <- prefixTerRel[exdr2111115:extend, sr21111115:s1:seg, sr21111125:s2:seg, sr21111135:s3:seg], eqvr211114:equiv, tchpr2111125:formula <- prefixTerRel[chpr2111125:chop, sr21111215:s3:seg, sr21111225:s2:seg, sr21111235:s1:seg]]]]], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, sr311:s1:seg, tqntr3112:formula <- logicApplyQuant[qr3112:forall, sr3112:s2:seg, timpr31113:formula <- logicInfixOp[tnotr311114:formula <- logicApplyUnary[ntr311114:not, tshrr3111115:formula <- prefixBinRel[shr3111115:shorter, sr31111115:s1:seg, sr31111125:s2:seg]], impr31113:implies, timpr311124:formula <- logicInfixOp[tnotr3111215:formula <- logicApplyUnary[ntr3111215:not, tlogr31112116:formula <- prefixBinRel[lgr31112116:longer, sr311121116:s2:seg, sr311121126:s1:seg]], impr311124:implies, teqr3111225:formula <- infixBinRel[CPsr31112216:s1:seg, eqsr3111225:equals, CPsr31112226:s2:seg]]]]], A3:and, rule4andrest:formula <- logicInfixOp[tqntr411:formula <- logicApplyQuant[qr411:forall, sr411:s1:seg, tnotr4112:formula <- logicApplyUnary[ntr4112:not, tlogr41113:formula <- prefixBinRel[lgr41113:longer, usr411113:unitSeg, sr411123:s1:seg]]], A4:and, rule5andrest:formula <- logicInfixOp[tqntr511:formula <- logicApplyQuant[qr511:forall, sr511:s1:seg, tqntr5112:formula <- logicApplyQuant[qr5112:forall, sr5112:s2:seg, timpr51113:formula <- logicInfixOp[tshrr511114:formula <- prefixBinRel[shr511114:shorter, sr5111114:s1:seg, sr5111124:s2:seg], impr51113:implies, tnotr511124:formula <- logicApplyUnary[ntr511124:not, tshrr5111215:formula <- prefixBinRel[shr5111215:shorter, sr51112115:s2:seg, sr51112125:s1:seg]]]]], A5:and, tqntr611:formula <- logicApplyQuant[qr611:forall, sr611:s1:seg, tqntr6112:formula <- logicApplyQuant[qr6112:forall, sr6112:s2:seg, tqntr61113:formula <- logicApplyQuant[qr61113:forall, sr61113:s3:seg, timpr611114:formula <- logicInfixOp[textr6111115:formula <- prefixTerRel[exdr6111115:extend, sr61111115:s1:seg, sr61111125:s2:seg, sr61111135:s3:seg], impr611114:implies, tandr6111125:formula <- logicInfixOp[tlogr61111216:formula <- prefixBinRel[lgr61111216:longer, sr611112116:s3:seg, sr611112126:s2:seg], andr6111125:and, tlogr61111226:formula <- prefixBinRel[lgr61111226:longer, sr611112216:s3:seg, sr611112226:s1:seg]]]]]]]]]]]

transfer
    sourceConstruction ruleAll
    targetConSpec objectConstrG
    interConSpec interMeasObj
    goal :metaTrue <- close[ruleAll:rr:formula, t':formula]
    output measObjAnalogy
    limit 3
    matchTarget ttarget:formula <- logicInfixOp[tqntr111:formula <- logicApplyQuant[qr111:forall, or111:o1:whObj, tqntr1112:formula <- logicApplyQuant[qr1112:forall, or1112:o2:whObj, teqvr11113:formula <- logicInfixOp[tshrr111114:formula <- prefixBinRel[shr111114:smaller, or1111114:o1:whObj, or1111124:o2:whObj], eqvr11113:equiv, tlogr111124:formula <- prefixBinRel[lgr111124:larger, or1111214:o1:whObj, or1111224:o2:whObj]]]], A1:and, rule2andrest:formula <- logicInfixOp[tqntr211:formula <- logicApplyQuant[qr211:forall, or211:o1:whObj, tqntr2112:formula <- logicApplyQuant[qr2112:forall, or2112:o2:whObj, tqntr21113:formula <- logicApplyQuant[qr21113:forall, or21113:o3:whObj, teqvr211114:formula <- logicInfixOp[tchpr2111115:formula <- prefixTerRel[chpr2111115:split, or21111115:o1:whObj, or21111125:o2:whObj, or21111135:o3:whObj], eqvr211114:equiv, tshrr2111125:formula <- prefixBinRel[shr2111125:smaller, or21111215:o1:whObj, or21111225:o2:whObj]]]]], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, or311:o1:whObj, tqntr3112:formula <- logicApplyQuant[qr3112:forall, or3112:o2:whObj, teqvr31113:formula <- logicInfixOp[tshrr311114:formula <- prefixBinRel[shr311114:smaller, or3111114:o1:whObj, or3111124:o2:whObj], eqvr31113:equiv, tlogr311124:formula <- prefixBinRel[lgr311124:larger, or3111214:o1:whObj, or3111224:o2:whObj]]]], A3:and, rule4andrest:formula <- logicInfixOp[tqntr411:formula <- logicApplyQuant[qr411:forall, or411:o1:whObj, tqntr4112:formula <- logicApplyQuant[qr4112:forall, or4112:o2:whObj, timpr41113:formula <- logicInfixOp[tshrr411114:formula <- prefixBinRel[shr411114:smaller, or4111114:o1:whObj, or4111124:o2:whObj], impr41113:implies, tnotr411124:formula <- logicApplyUnary[ntr411124:not, tshrr4111215:formula <- prefixBinRel[shr4111215:smaller, or41112115:o2:whObj, or41112125:o1:whObj]]]]], A4:and, rule5andrest:formula <- logicInfixOp[tqntr511:formula <- logicApplyQuant[qr511:forall, or511:o1:whObj, tqntr5112:formula <- logicApplyQuant[qr5112:forall, or5112:o2:whObj, timpr51113:formula <- logicInfixOp[tchpr511114:formula <- prefixTerRel[chpr511114:split, or5111114:o1:whObj, or5111124:o2:whObj, or5111134:o3:whObj], impr51113:implies, tlogr511124:formula <- prefixBinRel[lgr511124:larger, or5111214:o3:whObj, or5111224:o2:whObj]]]], A5:and, rule6andrest:formula <- logicInfixOp[tqntr611:formula <- logicApplyQuant[qr611:forall, or611:o1:whObj, tqntr6112:formula <- logicApplyQuant[qr6112:forall, or6112:o2:whObj, timpr61113:formula <- logicInfixOp[tshrr611114:formula <- prefixBinRel[mcr611114:matches, or6111114:o1:whObj, or6111124:o2:whObj], impr61113:implies, teqvr611124:formula <- logicInfixOp[tshrr6111215:formula <- prefixBinRel[hfr6111215:half, or61112115:o1:whObj, or61112125:o3:whObj], eqvr611124:equiv, tchpr6111225:formula <- prefixTerRel[chpr6111225:split, or61112215:o1:whObj, or61112225:o2:whObj, or61112235:o3:whObj]]]]], A6:and, rule7andrest:formula <- logicInfixOp[tqntr711:formula <- logicApplyQuant[qr711:forall, or711:o1:whObj, textr7112:formula <- prefixTerRel[exdr7112:combine, or71112:o2:whObj, or71122:Ho:whObj, or71132:2o:whObj]], A7:and, rule8andrest:formula <- logicInfixOp[tqntr811:formula <- logicApplyQuant[qr811:forall, or811:o1:whObj, teqvr8112:formula <- logicInfixOp[tshrr81113:formula <- prefixBinRel[shr81113:smaller, or811113:o1:whObj, or811123:o2:whObj], eqvr8112:equiv, tlogr81123:formula <- prefixBinRel[lgr81123:larger, or811213:o1:whObj, or811223:o2:whObj]]], A8:and, tqntr911:formula <- logicApplyQuant[qr911:forall, or911:o1:whObj, tqntr9112:formula <- logicApplyQuant[qr9112:forall, or9112:o2:whObj, tqntr91113:formula <- logicApplyQuant[qr91113:forall, or91113:o3:whObj, tqntr911114:formula <- logicApplyQuant[qr911114:forall, or911114:o4:whObj, timpr9111115:formula <- logicInfixOp[tshrr91111116:formula <- prefixBinRel[mcr91111116:matches, or911111116:o1:whObj, or911111126:o2:whObj], impr9111115:implies, teqvr91111126:formula <- logicInfixOp[tshrr911111217:formula <- prefixBinRel[shr911111217:smaller, or9111112117:o1:whObj, or9111112127:o2:whObj], eqvr91111126:equiv, tshrr911111227:formula <- prefixBinRel[shr911111227:smaller, or9111112217:o3:whObj, or9111112227:o4:whObj]]]]]]]]]]]]]]]
