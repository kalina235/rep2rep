import transferSchemas/measPath

construction rule1:motionPathG = 
    tqntr111:formula <- logicApplyQuant[qr111:forall, pr111:s1:point, tqntr1112:formula <- logicApplyQuant[qr1112:forall, pr1112:s2:point, teqvr11113:formula <- logicInfixOp[tfrtr111114:formula <- prefixBinRel[frr111114:further, pr1111114:s1:point, pr1111124:s2:point], eqvr11113:equiv, tclrr111124:formula <- prefixBinRel[clr111124:closer, pr1111214:s2:point, pr1111224:s1:point]]]]

construction rule2:motionPathG = 
    tqntr211:formula <- logicApplyQuant[qr211:forall, pr211:s1:point, tqntr2112:formula <- logicApplyQuant[qr2112:forall, pr2112:s2:point, tqntr21113:formula <- logicApplyQuant[qr21113:forall, pr21113:s3:point, teqvr211114:formula <- logicInfixOp[tawyr2111115:formula <- prefixTerRel[awyr2111115:away, pr21111115:s1:point, pr21111125:s2:point, pr21111135:s3:point], eqvr211114:equiv, ttowr2111125:formula <- prefixTerRel[towr2111125:towards, pr21111215:s3:point, pr21111225:s2:point, pr21111235:s1:point]]]]]

construction rule3:motionPathG = 
    tqntr311:formula <- logicApplyQuant[qr311:forall, pr311:s1:point, tqntr3112:formula <- logicApplyQuant[qr3112:forall, pr3112:s2:point, timpr31113:formula <- logicInfixOp[tnotr311114:formula <- logicApplyUnary[ntr311114:not, tclrr3111115:formula <- prefixBinRel[clr3111115:closer, pr31111115:s1:point, pr31111125:s2:point]], impr31113:implies, timpr311124:formula <- logicInfixOp[tnotr3111215:formula <- logicApplyUnary[ntr3111215:not, tfrtr31112116:formula <- prefixBinRel[frr31112116:further, pr311121116:s2:point, pr311121126:s1:point]], impr311124:implies, teqr3111225:formula <-  infixBinRel[CPsr31112216:s1:point, eqsr3111225:equals, CPsr31112226:s2:point]]]]]

construction rule4:motionPathG = 
    tqntr411:formula <- logicApplyQuant[qr411:forall, pr411:s1:point, tnotr4112:formula <- logicApplyUnary[ntr4112:not, tfrtr41113:formula <- prefixBinRel[frr41113:further, upr411113:origin, pr411123:s1:point]]]

construction rule5:motionPathG = 
    tqntr511:formula <- logicApplyQuant[qr511:forall, pr511:s1:point, tqntr5112:formula <- logicApplyQuant[qr5112:forall, pr5112:s2:point, timpr51113:formula <- logicInfixOp[tclrr511114:formula <- prefixBinRel[clr511114:closer, pr5111114:s1:point, pr5111124:s2:point], impr51113:implies, tnotr511124:formula <- logicApplyUnary[ntr511124:not, tclrr5111215:formula <- prefixBinRel[clr5111215:closer, pr51112115:s2:point, pr51112125:s1:point]]]]]

construction rule6:motionPathG = 
    tqntr611:formula <- logicApplyQuant[qr611:forall, pr611:s1:point, tqntr6112:formula <- logicApplyQuant[qr6112:forall, pr6112:s2:point, tqntr61113:formula <- logicApplyQuant[qr61113:forall, pr61113:s3:point, timpr611114:formula <- logicInfixOp[tandr6111115:formula <- logicInfixOp[tawyr61111116:formula <- prefixTerRel[awyr61111116:away, pr611111116:s1:point, pr611111126:s2:point, pr611111136:s3:point], andr6111115:and, tnotr61111126:formula <- logicApplyUnary[ntr61111126:not, teqr611111217:formula <-  infixBinRel[CPsr6111112118:p1:point, eqsr611111217:equals, CPsr6111112128:origin]]], impr611114:implies, tandr6111125:formula <- logicInfixOp[tfrtr61111216:formula <- prefixBinRel[frr61111216:further, pr611112116:s3:point, pr611112126:s2:point], andr6111125:and, tfrtr61111226:formula <- prefixBinRel[frr61111226:further, pr611112216:s3:point, pr611112226:s1:point]]]]]]

construction rule7:motionPathG = 
    tqntr711:formula <- logicApplyQuant[qr711:forall, pr711:p1:point, tqntr7112:formula <- logicApplyQuant[qr7112:forall, pr7112:p3:point, timpr71113:formula <- logicInfixOp[tawyr711114:formula <- prefixTerRel[awyr711114:away, pr7111114:p1:point, pr7111124:origin, pr7111134:p3:point], impr71113:implies, teqr711124:formula <-  infixBinRel[CPsr7111215:p1:point, eqsr711124:equals, CPsr7111225:p3:point]]]]

construction rule1to7:motionPathG =
    rule1andrest:formula <- logicInfixOp[tqntr111:formula <- logicApplyQuant[qr111:forall, pr111:s1:point, tqntr1112:formula <- logicApplyQuant[qr1112:forall, pr1112:s2:point, teqvr11113:formula <- logicInfixOp[tfrtr111114:formula <- prefixBinRel[frr111114:further, pr1111114:s1:point, pr1111124:s2:point], eqvr11113:equiv, tclrr111124:formula <- prefixBinRel[clr111124:closer, pr1111214:s2:point, pr1111224:s1:point]]]], A1:and, rule2andrest:formula <- logicInfixOp[tqntr211:formula <- logicApplyQuant[qr211:forall, pr211:s1:point, tqntr2112:formula <- logicApplyQuant[qr2112:forall, pr2112:s2:point, tqntr21113:formula <- logicApplyQuant[qr21113:forall, pr21113:s3:point, teqvr211114:formula <- logicInfixOp[tawyr2111115:formula <- prefixTerRel[awyr2111115:away, pr21111115:s1:point, pr21111125:s2:point, pr21111135:s3:point], eqvr211114:equiv, ttowr2111125:formula <- prefixTerRel[towr2111125:towards, pr21111215:s3:point, pr21111225:s2:point, pr21111235:s1:point]]]]], A2:and, rule3andrest:formula <- logicInfixOp[tqntr311:formula <- logicApplyQuant[qr311:forall, pr311:s1:point, tqntr3112:formula <- logicApplyQuant[qr3112:forall, pr3112:s2:point, timpr31113:formula <- logicInfixOp[tnotr311114:formula <- logicApplyUnary[ntr311114:not, tclrr3111115:formula <- prefixBinRel[clr3111115:closer, pr31111115:s1:point, pr31111125:s2:point]], impr31113:implies, timpr311124:formula <- logicInfixOp[tnotr3111215:formula <- logicApplyUnary[ntr3111215:not, tfrtr31112116:formula <- prefixBinRel[frr31112116:further, pr311121116:s2:point, pr311121126:s1:point]], impr311124:implies, teqr3111225:formula <- infixBinRel[CPsr31112216:s1:point, eqsr3111225:equals, CPsr31112226:s2:point]]]]], A3:and, rule4andrest:formula <- logicInfixOp[tqntr411:formula <- logicApplyQuant[qr411:forall, pr411:s1:point, tnotr4112:formula <- logicApplyUnary[ntr4112:not, tfrtr41113:formula <- prefixBinRel[frr41113:further, pr411113:u1:point, pr411123:s1:point]]], A4:and, rule5andrest:formula <- logicInfixOp[tqntr511:formula <- logicApplyQuant[qr511:forall, pr511:s1:point, tqntr5112:formula <- logicApplyQuant[qr5112:forall, pr5112:s2:point, timpr51113:formula <- logicInfixOp[tclrr511114:formula <- prefixBinRel[clr511114:closer, pr5111114:s1:point, pr5111124:s2:point], impr51113:implies, tnotr511124:formula <- logicApplyUnary[ntr511124:not, tclrr5111215:formula <- prefixBinRel[clr5111215:closer, pr51112115:s2:point, pr51112125:s1:point]]]]], A5:and, rule6andrest:formula <- logicInfixOp[tqntr611:formula <- logicApplyQuant[qr611:forall, pr611:s1:point, tqntr6112:formula <- logicApplyQuant[qr6112:forall, pr6112:s2:point, tqntr61113:formula <- logicApplyQuant[qr61113:forall, pr61113:s3:point, timpr611114:formula <- logicInfixOp[tandr6111115:formula <- logicInfixOp[tawyr61111116:formula <- prefixTerRel[awyr61111116:away, pr611111116:s1:point, pr611111126:s2:point, pr611111136:s3:point], andr6111115:and, tnotr61111126:formula <- logicApplyUnary[ntr61111126:not, teqr611111217:formula <- infixBinRel[CPsr6111112118:p1:point, eqsr611111217:equals, uCPsr6111112128:origin]]], impr611114:implies, tandr6111125:formula <- logicInfixOp[tfrtr61111216:formula <- prefixBinRel[frr61111216:further, pr611112116:s3:point, pr611112126:s2:point], andr6111125:and, tfrtr61111226:formula <- prefixBinRel[frr61111226:further, pr611112216:s3:point, pr611112226:s1:point]]]]]], A6:and, tqntr711:formula <- logicApplyQuant[qr711:forall, pr711:p1:point, tqntr7112:formula <- logicApplyQuant[qr7112:forall, pr7112:p3:point, timpr71113:formula <- logicInfixOp[tawyr711114:formula <- prefixTerRel[awyr711114:away, pr7111114:p1:point, upr7111124:origin, pr7111134:p3:point], impr71113:implies, teqr711124:formula <- infixBinRel[CPsr7111215:p1:point, eqsr711124:equals, CPsr7111225:p3:point]]]]]]]]]]


transfer
    sourceConstruction rule1to7
    targetConSpec motionPathG
    interConSpec interMeasPath
    goal :metaTrue <- close[tqntr211:r2:formula, t':formula]
    output tar1to7
    limit 100

transfer
    sourceConstruction rule2
    targetConSpec motionPathG
    interConSpec interMeasPath
    goal :metaTrue <- close[tqntr111:r1:formula, t':formula]
    output tar2
    limit 100

transfer
    sourceConstruction rule3
    targetConSpec motionPathG
    interConSpec interMeasPath
    goal :metaTrue <- close[tqntr111:r1:formula, t':formula]
    output tar3
    limit 100
